{"data":{"mark":{"html":"<div id=\"package-json\">\n    <h2>package.json</h2>\n                        <p><code>package.json</code> is a extremely important when building Node Apps. It must be an\n                            actual JSON not a JavaScript object literal.</p>\n                        <p>First, let‚Äôs make some modification to <code>package.json</code> to have a start command:</p>\n                        <ol type=\"i\">\n                            <li>Locate scripts and modify the code:</li>\n                            <div class=\"img-holder\"><img src=\"/img/scripts.PNG\" alt=\"\"></div>\n                            <li>Run <code>npm start</code> in the terminal</li>\n                            <div class=\"img-holder\"><img src=\"/img/npm-start.PNG\" alt=\"\"></div>\n                            <li>Awesome you've done great!</li>\n                        </ol>\n                        <p>We have bunch of objects in the <code>pacakge.json</code> file. Let's spend some time\n                            understanding we have in there.</p>\n                        <p>\n                            <code>name:</code> The name and version together form an identifier that is assumed to be\n                            completely\n                            unique. If you plan on publishing a package, the name and version are the most important\n                            things in the package.json and are required. In a case where you don‚Äôt plan on publishing a\n                            package, the name and version becomes optional.\n                        </p>\n                        <ol type=\"i\">\n                            <h4>Some rules:</h4>\n                            <li>The name must be less than or equal to 214 characters. This includes the scope for\n                                scoped packages. </li>\n                            <li>The name can‚Äôt start with a dot or an underscore </li>\n                            <li>New packages must not have uppercase letters in the name.</li>\n                            <li>The name ends up being part of a URL, an argument on the command line, and a folder\n                                name. Therefore, the name can‚Äôt contain any non-URL-safe characters.</li>\n                        </ol>\n                        <ol type=\"i\">\n                            <h4>Some tips:</h4>\n                            <li>Don‚Äôt use the same name as a core Node module e.g. path, http, and fs. </li>\n                            <li>Don‚Äôt put ‚Äújs‚Äù or ‚Äúnode‚Äù in the name. It‚Äôs assumed that it‚Äôs js, since you‚Äôre writing\n                                package.json file, and you can specify the engine using the ‚Äúengines‚Äù field.</li>\n                            <li>The name will probably be passed as an argument to require (), so it should be\n                                something short, but also reasonably descriptive. </li>\n                        </ol>\n                        <p>\n                            <code>version:</code> Version must be parseable by node-server, which bundled with npm as a\n                            dependency.\n                        </p>\n                        <p>\n                            <code>description:</code>Put a description in it, It‚Äôs a string. This helps people discover\n                            your package, as it‚Äôs listed in npm search.\n                        </p>\n                        <p>\n                            <code>keyword:</code>It‚Äôs an array of strings. This helps people discover your package as\n                            it‚Äôs listed in npm search.\n                        </p>\n                        <p>\n                            <code>homepage:</code>The url to the project homepage.\n                        </p>\n                        <p>\n                            <code>bug:</code>The url to your project‚Äôs issue tracket and/or the email address to which\n                            issues should be reported. These are helpful for people who encounter issues with your\n                            package. You can either specify both values i.e. email and a url or both. If a url is\n                            provide, it will be used by the npm bugs command. If you want to specify only a url, a\n                            simple string is just fine.\n                        </p>\n                        <p>\n                            <code>license:</code> You should specify a license for your package so that people know how\n                            they are permitted to use it, and any restriction you‚Äôre placing on it.\n                        </p>\n                        <p>\n                            <code>scripts:</code> The scripts property is a dictionary containing scripts command that\n                            are run at various times in he lifecycle of your package. The key is the lifecycle event,\n                            and the value is the command to run at that point.\n                        </p>\n                        <p>\n                            <code>dependencies:</code> Dependencies are specified in a simple object that maps a\n                            package name to a version range. The version range is a string which has one or more\n                            space-separated descriptors.\n                        </p>\n                    </div>\n<div id=\"package-vs-modules\">\n<h1>Package vs. Modules</h1>\n                        <p>\n                            A package is a bundle of more than one module grouped together (packaged) in an\n                            application.\n                            In the early part of this course, we initialized a Node app and spent some time in the\n                            <code>package.json</code>, we discussed publishing with name and version. Some Node apps\n                            can also be\n                            considered a package. We won‚Äôt be covering how to build node packages in this edition\n                            maybe later courses will. But understand a bundle of module makes up a package.\n                            A module is a reusable JavaScript file in the application, that must have been exported and\n                            made available to other files in your application.\n</p>\n                        <p>Now we've gotten a good introduction let's go ahead in the next course and build a <code>german-todo-app.</code></p>\n                    </div>","frontmatter":{"title":"Packages && Modules","topic":"Node.js","author":"Codeekage","image":"/img/agiri.jpeg"},"fields":{"slug":"/node/pacakge/"}},"all":{"totalCount":18,"edges":[{"node":{"id":"739e2e5f-153e-5321-83c9-a66f5bd4d973","frontmatter":{"title":"","date":null,"topic":null,"author":null},"fields":{"slug":"/node/installation/"},"excerpt":""}},{"node":{"id":"fcfd463f-8de4-54e4-befa-02ba53123700","frontmatter":{"title":"Introduction && Installation","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/introduction/"},"excerpt":""}},{"node":{"id":"c490dd4a-da75-5ea9-8b20-89a80c0ebf55","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"Apollo","author":"NIL"},"fields":{"slug":"/apollo/coming-soon/"},"excerpt":"Awaiting your awesomeness! üöÄüöÄüéäüéâ"}},{"node":{"id":"f8ad58fa-cb91-50f5-b66a-9a4bfd48dd07","frontmatter":{"title":"Express Routing","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/routing/"},"excerpt":""}},{"node":{"id":"f7701f02-3e81-5396-9b11-8c7c89cabe20","frontmatter":{"title":"Overview","date":"10 August, 2017","topic":"Overview","author":"GERMANSTACK CREATOR"},"fields":{"slug":"/"},"excerpt":""}},{"node":{"id":"4d701b96-9eb8-525e-a031-449c3b2cbc0d","frontmatter":{"title":"Setting up Express","date":"10 August, 2017","topic":"Express","author":"Sani"},"fields":{"slug":"/express/setting-up/"},"excerpt":""}},{"node":{"id":"8e5dff1d-82da-599e-b0aa-75f31d400142","frontmatter":{"title":"Custom Middleware && Handlers","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/middleware-handlers/"},"excerpt":""}},{"node":{"id":"a2dafd6b-2f2b-566e-93ca-4b8ef706612c","frontmatter":{"title":"Express Middleware Functions","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/middleware/"},"excerpt":""}},{"node":{"id":"86b9a723-90de-5d66-9092-bcb27ef9a001","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"GraphQL","author":"NIL"},"fields":{"slug":"/graphql/coming-soon/"},"excerpt":"Awaiting your awesomeness! üöÄüöÄüéäüéâ"}},{"node":{"id":"54bf3b55-67f2-5d84-a8ed-7f468734e3b0","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"How To(s)","author":"NIL"},"fields":{"slug":"/how-tos/coming-soon/"},"excerpt":"Awaiting your awesomeness! üöÄüöÄüéäüéâ"}},{"node":{"id":"71f57527-1b61-526a-9a57-b62c46600745","frontmatter":{"title":"Packages && Modules","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/pacakge/"},"excerpt":""}},{"node":{"id":"a391f477-7c7f-5677-b509-7bd1d8632118","frontmatter":{"title":"Modules","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/modules/"},"excerpt":""}},{"node":{"id":"cd2f9cc4-1dc8-53f6-adca-ba28fb0b6225","frontmatter":{"title":"Introduction/Installation","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/introduction/"},"excerpt":"Node.js is an asynchronous event driven JavaScript runtime, designed to build scalable\nnetwork applications.\nAs an event driven JavaScript‚Ä¶"}},{"node":{"id":"444a3a46-74ea-5bad-b7bd-343c3cef0151","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"React.js","author":"NIL"},"fields":{"slug":"/react/coming-soon/"},"excerpt":"Awaiting your awesomeness! üöÄüöÄüéäüéâ"}},{"node":{"id":"e9c7ce29-8def-53c4-979d-d8b12830a3a2","frontmatter":{"title":"Setting Up Node Server","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/setting-up/"},"excerpt":""}},{"node":{"id":"6ca07e3b-67b8-56c9-a5f5-970a5f8a1d68","frontmatter":{"title":"Mongoose Schema","date":"10 August, 2017","topic":"MongoDB","author":"Codeekage"},"fields":{"slug":"/mongodb/schema/"},"excerpt":""}},{"node":{"id":"a9561275-59fa-592a-9c18-9465e2454865","frontmatter":{"title":"Introducing Mongoose","date":"10 August, 2017","topic":"MongoDB","author":"Codeekage"},"fields":{"slug":"/mongodb/mongoose/"},"excerpt":""}},{"node":{"id":"be48e74e-a76e-58e9-8f1a-759fd22afd12","frontmatter":{"title":"Introduction && Installation","date":"10 August, 2017","topic":"MongoDB","author":"Codeekage"},"fields":{"slug":"/mongodb/introduction/"},"excerpt":""}}]}},"pageContext":{"slug":"/node/pacakge/"}}