{"data":{"mark":{"html":"<div id=\"express-introduction\">\n                        <h2 id=\"express\"><i class=\"fa fa-link\"></i>Introduction</h2>\n                        <p>Express is a minimal and flexible Node.js web application framework that provides a robust\n                            set of features for web and mobile applications.\n                        </p>\n                        <p>\n                            RESTful API for this application will be developed using Express. Express has a large\n                            library of HTTP utility and middleware at your disposal, creating a production level API\n                            using express is always fun, quick, and easy.\n                        </p>\n                        <p>\n                            With Express‚Äô provision of thin layer fundamental web features, your application\n                            performance is not something to really worry about. Express doesn‚Äôt affect or obscure any\n                            Node.js feature you will be using.\n                        </p>\n                    </div>\n                    <div id=\"express-installation\">\n                        <h2><i class=\"fa fa-link\"></i> Installing Express</h2>\n                        <p>\n                            In the next few pages of this course, we‚Äôll be building a <code>german-todo-app</code>. But\n                            to do that,\n                            we need to install some packages (or dependencies NB: packages and dependencies will be\n                            used interchangbly), like <code>express</code>. Installation process is easy,\n                            and straight\n                            forward that you have nothing to worry about. We‚Äôll be using a <a href=\"#npm-installation\">Package\n                                Manager</a> mentioned earlier in this course. Make sure you have the package manager\n                            installed. You can check if the package manager exists by performing the following\n                            commands:\n                        </p>\n                        <ol type=\"i\">\n                            <li>Run <code>npm ‚Äìversion</code></li>\n                            <li>You should see the version of <code>npm</code> running on your machine. </li>\n                        </ol>\n                        <p>\n                            Let‚Äôs proceed to installing express. Remember the folder we created earlier for all <a href=\"#node-projects\">Node.js\n                                Projects?</a>\n                            Awesome! Navigate to the folder, and create a folder for this project <code>german-todo-app</code>\n                            Done? Okay! Let‚Äôs get to the proper installation and codes:\n                        </p>\n                        <ol type=\"i\">\n                            <li>Run <code>npm init</code> in <code>german-todo-app</code> directory from the terminal.</li>\n                            <li>Run <code>npm install expres</code></li>\n                        </ol>\n                        <p>\n                            Express has been successfully installed. By default, with version npm 5.0+ npm\n                            install adds the module to the dependencies list in the package.json file; with earlier\n                            versions of npm, you must specify the ‚Äìsave option explicitly.\n                        </p>\n                        <ol>\n                            <li>Open up <code>package.json</code> and locate <code>dependencies:</code>, you will\n                                notice express has\n                                been added as a dependency for this application. Which is cool. Earlier we also looked\n                                at\n                                and package.json and discussed some keys in the JSON, <a href=\"#package-json\">read up\n                                    here</a>. </li>\n<li>\n                                Also notice a folder has been created <code>node-modules</code>. DO NOT Tampere with\n                                this folder.\n                                Don‚Äôt try editing any package in there. Messing around with the <code>node-modules</code>\n                                folder can\n                                make your application act really funny, and throw some unexpected behavior.\n                            </li>\n                        </ol>\n                        <h3>Breakout Session ‚è∞‚è∞<code>node-modules</code>. </h3>\n                                            <div id=\"node-modules\">\n                        <h1><i class=\"fa fa-link\"></i> <code>node-modules</code></h1>\n                        <p>Remember when we did an overview of <a href=\"#package-vs-modules\">Modules and Packages</a>?\n                            Awesome! Node.js saves application\n                            dependencies in the node-modules folder dynamically; whenever a npm install or any package\n                            manager runs an installation successfully, the package is automatically saved to the\n                            node-modules folder. This makes it a lot easier to use the package on one single require()\n                            call. The package and all of its modules becomes available for use. </p>\n                    </div>\n                    </div>","frontmatter":{"title":"Introduction && Installation","topic":"Express","author":"Codeekage","image":"/img/agiri.jpeg"},"fields":{"slug":"/express/introduction/"}},"all":{"totalCount":18,"edges":[{"node":{"id":"739e2e5f-153e-5321-83c9-a66f5bd4d973","frontmatter":{"title":"","date":null,"topic":null,"author":null},"fields":{"slug":"/node/installation/"},"excerpt":""}},{"node":{"id":"fcfd463f-8de4-54e4-befa-02ba53123700","frontmatter":{"title":"Introduction && Installation","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/introduction/"},"excerpt":""}},{"node":{"id":"c490dd4a-da75-5ea9-8b20-89a80c0ebf55","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"Apollo","author":"NIL"},"fields":{"slug":"/apollo/coming-soon/"},"excerpt":"Awaiting your awesomeness! üöÄüöÄüéäüéâ"}},{"node":{"id":"f8ad58fa-cb91-50f5-b66a-9a4bfd48dd07","frontmatter":{"title":"Express Routing","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/routing/"},"excerpt":""}},{"node":{"id":"f7701f02-3e81-5396-9b11-8c7c89cabe20","frontmatter":{"title":"Overview","date":"10 August, 2017","topic":"Overview","author":"GERMANSTACK CREATOR"},"fields":{"slug":"/"},"excerpt":""}},{"node":{"id":"4d701b96-9eb8-525e-a031-449c3b2cbc0d","frontmatter":{"title":"Setting up Express","date":"10 August, 2017","topic":"Express","author":"Sani"},"fields":{"slug":"/express/setting-up/"},"excerpt":""}},{"node":{"id":"8e5dff1d-82da-599e-b0aa-75f31d400142","frontmatter":{"title":"Custom Middleware && Handlers","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/middleware-handlers/"},"excerpt":""}},{"node":{"id":"a2dafd6b-2f2b-566e-93ca-4b8ef706612c","frontmatter":{"title":"Express Middleware Functions","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/middleware/"},"excerpt":""}},{"node":{"id":"86b9a723-90de-5d66-9092-bcb27ef9a001","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"GraphQL","author":"NIL"},"fields":{"slug":"/graphql/coming-soon/"},"excerpt":"Awaiting your awesomeness! üöÄüöÄüéäüéâ"}},{"node":{"id":"54bf3b55-67f2-5d84-a8ed-7f468734e3b0","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"How To(s)","author":"NIL"},"fields":{"slug":"/how-tos/coming-soon/"},"excerpt":"Awaiting your awesomeness! üöÄüöÄüéäüéâ"}},{"node":{"id":"71f57527-1b61-526a-9a57-b62c46600745","frontmatter":{"title":"Packages && Modules","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/pacakge/"},"excerpt":""}},{"node":{"id":"a391f477-7c7f-5677-b509-7bd1d8632118","frontmatter":{"title":"Modules","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/modules/"},"excerpt":""}},{"node":{"id":"cd2f9cc4-1dc8-53f6-adca-ba28fb0b6225","frontmatter":{"title":"Introduction/Installation","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/introduction/"},"excerpt":"Node.js is an asynchronous event driven JavaScript runtime, designed to build scalable\nnetwork applications.\nAs an event driven JavaScript‚Ä¶"}},{"node":{"id":"444a3a46-74ea-5bad-b7bd-343c3cef0151","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"React.js","author":"NIL"},"fields":{"slug":"/react/coming-soon/"},"excerpt":"Awaiting your awesomeness! üöÄüöÄüéäüéâ"}},{"node":{"id":"e9c7ce29-8def-53c4-979d-d8b12830a3a2","frontmatter":{"title":"Setting Up Node Server","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/setting-up/"},"excerpt":""}},{"node":{"id":"6ca07e3b-67b8-56c9-a5f5-970a5f8a1d68","frontmatter":{"title":"Mongoose Schema","date":"10 August, 2017","topic":"MongoDB","author":"Codeekage"},"fields":{"slug":"/mongodb/schema/"},"excerpt":""}},{"node":{"id":"a9561275-59fa-592a-9c18-9465e2454865","frontmatter":{"title":"Introducing Mongoose","date":"10 August, 2017","topic":"MongoDB","author":"Codeekage"},"fields":{"slug":"/mongodb/mongoose/"},"excerpt":""}},{"node":{"id":"be48e74e-a76e-58e9-8f1a-759fd22afd12","frontmatter":{"title":"Introduction && Installation","date":"10 August, 2017","topic":"MongoDB","author":"Codeekage"},"fields":{"slug":"/mongodb/introduction/"},"excerpt":""}}]}},"pageContext":{"slug":"/express/introduction/"}}