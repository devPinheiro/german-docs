{"data":{"mark":{"html":"<div id=\"express-routing\">\n                        <h2><i class=\"fa fa-link\"></i>Routing (HTTP Request Methods) </h2>\n                        <p>Routing refers to how an application resolves and responds to a client request at a\n                            particular endpoint, which is a URI (or path) to a specific HTTP request method (GET, POST,\n                            PUT, and so on).\n                        </p>\n                        <p>\n                            A route can have mutiple handler functions, which are executed when the route is\n                            matched.\n                        </p>\n                        <p>A typical express route:</p>\n                        <div class=\"code-area\">\n                            <code>\n                                app.<fnc>METHOD</fnc><const>(</const>URI, HANDLER<const>)</const>;\n                            </code>\n                        </div>\n                        <p>Where:</p>\n                        <ol>\n                            <li><code>app</code> is an instance of express.</li>\n                            <li><code>METHOD</code> is an HTTP request method (get, post, put, etc)</li>\n                            <li><code>URI</code> is a path on the server. </li>\n                            <li> <code>HANDLER</code> the executed behaviour of the route when it's matched.</li>\n                        </ol>\n                        <h4>💪💪Challenge💪💪</h4>\n                        <p>We've written some basic routes in our previous codes.</p>\n                        <ol>\n                            <li>Identify the basic route</li>\n                            <li>Add a simple comment above the code</li>\n                            <li>Commit and push the added comments to the repo.</li>\n                            <li>Good Luck 🏆🏆🏆</li>\n                        </ol>\n                        <p>Now, we understand what routes are, it's safe to add some routes to our <code>german-todo-app</code></p>\n                        <ol>\n                            <li>Create a <code>route</code> folder in the root directory</li>\n                            <li>Create a <code>todo.js</code> file in the <code>route</code> folder</li>\n                            <li>Add the following code to <code>todo.js</code></li>\n                            <div class=\"code-area\">\n                                <code>\n                                    <p><const>const</const> express = <fnc>require</fnc>(<string>'express'</string>);</p>\n                                    <p><const>const</const> route = express.<fnc>Router</fnc>();</p>\n                                    <p>route.<fnc>get</fnc>(<string>'/todo'</string>, <const>(</const>req, res, next<const>) =></const> {</p>\n                                    <p class=\"inner\">res.<fnc>json</fnc>(todo);</p>\n                                    <p>});</p>\n                                </code>\n                            </div>\n                        </ol>\n                        <p>Running the code above will result to no change. First, we need to modify index.js.</p>\n                        <p>Currently <code>index.js</code>:</p>\n                        <ol type=\"i\">\n                            <div class=\"code-area\">\n                                <code>\n                                    <p><const>const</const> express = <fnc>require</fnc>(<string>'epress'</string>);</p>\n                                    <p><comment><i>//init express app</i></comment></p>\n                                    <p><const>const</const> app = <fnc>express</fnc>();</p>\n                                    <p><comment><i>//set a port</i></comment></p>\n                                    <p><const>const</const> port = <num>4000</num>;</p>\n                                    <p><comment><i>//set a hostname</i></comment></p>\n                                    <p><const>const</const> hostname = <string>'127.0.0.1'</string>;</p>\n                                    <p>app.<fnc>get</fnc>(<string>'/'</string>, <fnc>(</fnc>req, res <fnc>) => </fnc> {</p>\n                                    <p class=\"inner\">res.<fnc>send</fnc>(<string>'Hello World'</string>);</p>\n                                    <p>});</p>\n                                    <p>app.<fnc>listen</fnc>(port, <fnc>() => </fnc>{</p>\n                                    <p class=\"inner\"><props>console</props>.<fnc>log</fnc>(<string>`Server running at https://</string><temp>${</temp>hostname<temp>}</temp><string>:</string> <temp>${</temp>port<temp>}</temp><string>`</string>);</p>\n                                    <p>});</p>\n                                </code>\n                            </div>\n                            <li>Replace <code>app.get</code> with the code below:</li>\n                            <div class=\"code-area\"><code>\n                                    <p>app.<fnc>use</fnc>(<string>'/'</string>, <fnc>require</fnc>(<string>'./routes/todo'</string>));</p>\n                            </code></div>\n                            <li>Hit save and restart the server with <code>npm start</code></li>\n                            <li>Open the route in the browser <a href=\"http://127.0.0.1:4000/todo\" target=\"_blank\">http://127.0.0.1:4000/todo</a></li>\n                            <li>Notice we have a <code>ReferenceError: todo is not defined</code></li>\n                            <li>Let's create an array of todos in <code>todo.js</code></li>\n                            <div class=\"code-area\">\n                                <code>\n                                    <p>...</p>\n                                    <p><const>const</const> todo = [{\n                                       <p class=\"inner\">id : <num>1</num>,</p>\n                                       <p class=\"inner\">task: <string>'CLeaning'</string></p>\n                                       <p class=\"inner\">time: <string>'10:00AM'</string></p>\n                                       <p class=\"inner\">done: <num>false</num></p>\n                                    <p>}]</p>\n                                    <p>...</p>\n                                </code>\n                            </div>\n                        </ol>\n                        <h4>💪💪Challenge💪💪</h4>\n                        <ol type=\"i\">\n                            <li>Expand the todo array to have a minimum of <code>10 objects</code></li>\n                            <li>Add sensible comments to the codebase</li>\n                            <li>Commit and push changes to the repo</li>\n                            <li>Good Luck 🏆🏆🏆🏆 </li>\n                        </ol>\n                    </div>","frontmatter":{"title":"Express Routing","topic":"Express","author":"Codeekage","image":"/img/agiri.jpeg"},"fields":{"slug":"/express/routing/"}},"all":{"totalCount":18,"edges":[{"node":{"id":"739e2e5f-153e-5321-83c9-a66f5bd4d973","frontmatter":{"title":"","date":null,"topic":null,"author":null},"fields":{"slug":"/node/installation/"},"excerpt":""}},{"node":{"id":"fcfd463f-8de4-54e4-befa-02ba53123700","frontmatter":{"title":"Introduction && Installation","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/introduction/"},"excerpt":""}},{"node":{"id":"c490dd4a-da75-5ea9-8b20-89a80c0ebf55","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"Apollo","author":"NIL"},"fields":{"slug":"/apollo/coming-soon/"},"excerpt":"Awaiting your awesomeness! 🚀🚀🎊🎉"}},{"node":{"id":"f8ad58fa-cb91-50f5-b66a-9a4bfd48dd07","frontmatter":{"title":"Express Routing","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/routing/"},"excerpt":""}},{"node":{"id":"f7701f02-3e81-5396-9b11-8c7c89cabe20","frontmatter":{"title":"Overview","date":"10 August, 2017","topic":"Overview","author":"GERMANSTACK CREATOR"},"fields":{"slug":"/"},"excerpt":""}},{"node":{"id":"4d701b96-9eb8-525e-a031-449c3b2cbc0d","frontmatter":{"title":"Setting up Express","date":"10 August, 2017","topic":"Express","author":"Sani"},"fields":{"slug":"/express/setting-up/"},"excerpt":""}},{"node":{"id":"8e5dff1d-82da-599e-b0aa-75f31d400142","frontmatter":{"title":"Custom Middleware && Handlers","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/middleware-handlers/"},"excerpt":""}},{"node":{"id":"a2dafd6b-2f2b-566e-93ca-4b8ef706612c","frontmatter":{"title":"Express Middleware Functions","date":"10 August, 2017","topic":"Express","author":"Codeekage"},"fields":{"slug":"/express/middleware/"},"excerpt":""}},{"node":{"id":"86b9a723-90de-5d66-9092-bcb27ef9a001","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"GraphQL","author":"NIL"},"fields":{"slug":"/graphql/coming-soon/"},"excerpt":"Awaiting your awesomeness! 🚀🚀🎊🎉"}},{"node":{"id":"54bf3b55-67f2-5d84-a8ed-7f468734e3b0","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"How To(s)","author":"NIL"},"fields":{"slug":"/how-tos/coming-soon/"},"excerpt":"Awaiting your awesomeness! 🚀🚀🎊🎉"}},{"node":{"id":"71f57527-1b61-526a-9a57-b62c46600745","frontmatter":{"title":"Packages && Modules","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/pacakge/"},"excerpt":""}},{"node":{"id":"a391f477-7c7f-5677-b509-7bd1d8632118","frontmatter":{"title":"Modules","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/modules/"},"excerpt":""}},{"node":{"id":"cd2f9cc4-1dc8-53f6-adca-ba28fb0b6225","frontmatter":{"title":"Introduction/Installation","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/introduction/"},"excerpt":"Node.js is an asynchronous event driven JavaScript runtime, designed to build scalable\nnetwork applications.\nAs an event driven JavaScript…"}},{"node":{"id":"444a3a46-74ea-5bad-b7bd-343c3cef0151","frontmatter":{"title":"Coming Soon","date":"10 August, 2017","topic":"React.js","author":"NIL"},"fields":{"slug":"/react/coming-soon/"},"excerpt":"Awaiting your awesomeness! 🚀🚀🎊🎉"}},{"node":{"id":"e9c7ce29-8def-53c4-979d-d8b12830a3a2","frontmatter":{"title":"Setting Up Node Server","date":"10 August, 2017","topic":"Node.js","author":"Codeekage"},"fields":{"slug":"/node/setting-up/"},"excerpt":""}},{"node":{"id":"6ca07e3b-67b8-56c9-a5f5-970a5f8a1d68","frontmatter":{"title":"Mongoose Schema","date":"10 August, 2017","topic":"MongoDB","author":"Codeekage"},"fields":{"slug":"/mongodb/schema/"},"excerpt":""}},{"node":{"id":"a9561275-59fa-592a-9c18-9465e2454865","frontmatter":{"title":"Introducing Mongoose","date":"10 August, 2017","topic":"MongoDB","author":"Codeekage"},"fields":{"slug":"/mongodb/mongoose/"},"excerpt":""}},{"node":{"id":"be48e74e-a76e-58e9-8f1a-759fd22afd12","frontmatter":{"title":"Introduction && Installation","date":"10 August, 2017","topic":"MongoDB","author":"Codeekage"},"fields":{"slug":"/mongodb/introduction/"},"excerpt":""}}]}},"pageContext":{"slug":"/express/routing/"}}